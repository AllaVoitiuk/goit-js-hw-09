{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEAC,EAAAF,GAASG,OAAOC,KAAK,CACnBC,MAAO,QACPC,SAAS,IAGX,MAAMC,EAAO,CACXC,UAAWC,SAASC,cAAc,UAClCC,MAAOF,SAASG,kBAAkB,SAClCC,KAAMJ,SAASG,kBAAkB,QACjCE,OAAQL,SAASG,kBAAkB,WA2BrC,SAASG,EAAcC,EAAUL,GAE/B,OAAO,IAAIM,SAAQ,CAACC,EAASC,KAE3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAACF,E,MAAUL,IAGnBQ,EAAO,C,SAACH,E,MAAUL,GAAO,GAE1BA,EAAM,G,CArCbJ,EAAKC,UAAUgB,iBAAiB,SAEhC,SAAkBC,GAEhBA,EAAMC,iBAEN,IAAIC,EAAeC,OAAOrB,EAAKI,MAAM,GAAGkB,OAExC,IAAI,IAAIC,EAAI,EAAGA,GAAKF,OAAOrB,EAAKO,OAAO,GAAGe,OAAQC,IAEhDf,EAAce,EAAGH,GAChBI,MAAK,EAACf,SAAEA,EAAQL,MAAEA,MACjBqB,QAAQC,IAAI,uBAAqBjB,QAAiBL,OAClDT,EAAAF,GAASG,OAAO+B,QAAQ,uBAAqBlB,QAAiBL,MAAU,IAEzEwB,OAAM,EAACnB,SAAEA,EAAQL,MAAEA,MAClBqB,QAAQC,IAAI,sBAAoBjB,QAAiBL,OACjDT,EAAAF,GAASG,OAAOiC,QAAQ,sBAAoBpB,QAAeL,MAAU,IAGvEgB,GAAgBC,OAAOrB,EAAKM,KAAK,GAAGgB,M","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nNotiflix.Notify.init({\n  width: '250px',  \n  useIcon: false,  \n});\n\nconst refs = {\n  submitBtn: document.querySelector('button'),  \n  delay: document.getElementsByName('delay'),  \n  step: document.getElementsByName('step'),\n  amount: document.getElementsByName('amount') \n};\n\nrefs.submitBtn.addEventListener('click', onSubmit);\n\nfunction onSubmit(event){\n\n  event.preventDefault();  \n    \n  let promiceDelay = Number(refs.delay[0].value);  \n\n  for(let i = 1; i <= Number(refs.amount[0].value); i++)\n  {\n    createPromise(i, promiceDelay)\n    .then(({ position, delay }) => {\n      console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n    })\n    .catch(({ position, delay }) => {\n      console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n      Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n    });\n    \n    promiceDelay += Number(refs.step[0].value);     \n  }\n}\n\nfunction createPromise(position, delay) {\n\n  return new Promise((resolve, reject) => {\n\n    const shouldResolve = Math.random() > 0.3;\n        \n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({position, delay});      \n      } \n      else {\n        reject({position, delay});      \n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","$parcel$interopDefault","Notify","init","width","useIcon","$47d4ff9957288465$var$refs","submitBtn","document","querySelector","delay","getElementsByName","step","amount","$47d4ff9957288465$var$createPromise","position","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","addEventListener","event","preventDefault","promiceDelay","Number","value","i","then","console","log","success","catch","failure"],"version":3,"file":"03-promises.1eda86fc.js.map"}